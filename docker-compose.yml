services:
  # reverse-proxy:
  #   build: ./reverse-proxy
  #   container_name: reverse-proxy
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   networks:
  #     - app-network
  #   environment:
  #     - SITE1_DOMAIN=${SITE1_DOMAIN}
  #     - SITE2_DOMAIN=${SITE2_DOMAIN}
  #   depends_on:
  #     - site1
  #     - site2
  #     - forms-data-handler

  traefik:
    image: traefik:latest
    container_name: traefik
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443

      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=app-network

      - --certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
    labels:
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
      - "traefik.http.middlewares.strip-api-prefix.stripPrefix.prefixes=/api"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    networks:
      - app-network
    restart: unless-stopped

  site1:
    build: ./sites/site1
    container_name: site1
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.site1-http.entrypoints=web"
      - "traefik.http.routers.site1-http.rule=Host(`${SITE1_DOMAIN}`) || Host(`www.${SITE1_DOMAIN}`)"
      
      - "traefik.http.routers.site1-main.entrypoints=websecure"
      - "traefik.http.routers.site1-main.rule=Host(`${SITE1_DOMAIN}`) || Host(`www.${SITE1_DOMAIN}`)"
      - "traefik.http.routers.site1-main.tls.certresolver=letsencrypt"
    restart: unless-stopped
    networks:
      - app-network

  site2:
    build: ./sites/site2
    container_name: site2
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.site2-http.entrypoints=web"
      - "traefik.http.routers.site2-http.rule=Host(`${SITE2_DOMAIN}`) || Host(`www.${SITE2_DOMAIN}`)"
      
      - "traefik.http.routers.site2-main.entrypoints=websecure"
      - "traefik.http.routers.site2-main.rule=Host(`${SITE2_DOMAIN}`) || Host(`www.${SITE2_DOMAIN}`)"
      - "traefik.http.routers.site2-main.tls.certresolver=letsencrypt"
    restart: unless-stopped
    networks:
      - app-network

  forms-data-handler:
    build: ./forms-data-handler/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.site1-api.entrypoints=websecure"
      - "traefik.http.routers.site1-api.rule=(Host(`${SITE1_DOMAIN}`) || Host(`www.${SITE1_DOMAIN}`)) && PathPrefix(`/api`)"
      - "traefik.http.routers.site1-api.tls.certresolver=letsencrypt"
      - "traefik.http.routers.site1-api.middlewares=strip-api-prefix"
      
      - "traefik.http.routers.site2-api.entrypoints=websecure"
      - "traefik.http.routers.site2-api.rule=(Host(`${SITE2_DOMAIN}`) || Host(`www.${SITE2_DOMAIN}`)) && PathPrefix(`/api`)"
      - "traefik.http.routers.site2-api.tls.certresolver=letsencrypt"
      - "traefik.http.routers.site2-api.middlewares=strip-api-prefix"   
    restart: unless-stopped
    environment:
      - GOOGLE_POST_URL=${GOOGLE_POST_URL}
    networks:
      - app-network
    depends_on:
      - traefik

networks:
  app-network:
    driver: bridge